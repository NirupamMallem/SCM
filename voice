import sounddevice as sd
import numpy as np
import whisper
import openai
import pyttsx3
from scipy.io.wavfile import write

# Initialize OpenAI API key
openai.api_key = 'your_openai_api_key'  # Replace with your OpenAI API key

# Step 1: Capture audio from the microphone
def record_audio(duration=5, fs=16000):
    print("Recording...")
    recording = sd.rec(int(duration * fs), samplerate=fs, channels=1, dtype=np.int16)
    sd.wait()  # Wait until recording is finished
    print("Recording finished.")
    return recording, fs

# Step 2: Save the recorded audio to a WAV file (Whisper requires a file or array)
def save_audio_to_file(audio, fs, filename="input.wav"):
    write(filename, fs, audio)

# Step 3: Use Whisper to convert speech to text
def speech_to_text(audio_file):
    model = whisper.load_model("base")
    result = model.transcribe(audio_file)
    return result['text']

# Step 4: Use OpenAI's GPT API to generate a response based on the input text
def get_gpt_response(text):
    response = openai.ChatCompletion.create(
        model="gpt-3.5-turbo",  # You can also use "gpt-4" if you have access
        messages=[
            {"role": "system", "content": "You are a helpful assistant."},
            {"role": "user", "content": text}
        ]
    )
    return response['choices'][0]['message']['content']

# Step 5: Convert generated text to speech using pyttsx3
def text_to_speech(text):
    engine = pyttsx3.init()
    engine.say(text)
    engine.runAndWait()

# Example usage of the complete pipeline
if __name__ == "__main__":
    # 1. Record audio from the microphone for 5 seconds
    duration = 5  # seconds
    audio, fs = record_audio(duration)

    # 2. Save the recorded audio to a WAV file
    save_audio_to_file(audio, fs, "input.wav")

    # 3. Convert speech to text (using Whisper)
    input_text = speech_to_text("input.wav")
    print("Transcribed Speech:", input_text)

    # 4. Send the transcribed text to ChatGPT and get the response
    gpt_response = get_gpt_response(input_text)
    print("ChatGPT Response:", gpt_response)

    # 5. Convert ChatGPT's response back to speech
    text_to_speech(gpt_response)
